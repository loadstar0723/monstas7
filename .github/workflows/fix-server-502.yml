name: Fix Server 502 Error

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  fix-server:
    runs-on: ubuntu-latest

    steps:
    - name: Fix 502 Bad Gateway Error
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 15.165.105.250
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "=== 서버 502 에러 근본 해결 시작 ==="

          # 1. 시스템 리소스 확인
          echo "=== 메모리 상태 확인 ==="
          free -h
          df -h

          # 2. 모든 Node.js 프로세스 종료
          echo "=== 기존 Node.js 프로세스 모두 종료 ==="
          sudo pkill -f node || true
          sudo pkill -f npm || true
          sudo pkill -f next || true

          # 3. PM2 완전 정리
          echo "=== PM2 프로세스 정리 ==="
          pm2 kill
          pm2 flush
          rm -rf ~/.pm2/logs/*

          # 4. 스왑 메모리 추가 (메모리 부족 해결)
          echo "=== 스왑 메모리 설정 (4GB) ==="
          if [ ! -f /swapfile ]; then
            sudo fallocate -l 4G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
          fi
          sudo swapon --show

          # 5. 임시 파일 정리
          echo "=== 임시 파일 정리 ==="
          sudo rm -rf /tmp/*
          sudo rm -rf /var/tmp/*
          cd ~/monstas7/frontend
          rm -rf .next
          rm -rf node_modules/.cache

          # 6. Node.js 메모리 제한 설정
          echo "=== Node.js 메모리 제한 설정 ==="
          export NODE_OPTIONS="--max-old-space-size=1024"
          echo "export NODE_OPTIONS='--max-old-space-size=1024'" >> ~/.bashrc

          # 7. 의존성 재설치 (production only)
          echo "=== Production 의존성만 설치 ==="
          cd ~/monstas7/frontend
          rm -rf node_modules
          npm ci --production

          # 8. Next.js 프로덕션 빌드
          echo "=== Next.js 프로덕션 빌드 ==="
          npm run build

          # 9. PM2 ecosystem 설정 파일 생성
          echo "=== PM2 설정 파일 생성 ==="
          cat > ecosystem.config.js << 'EOF'
          module.exports = {
            apps: [{
              name: 'monstas7',
              script: 'npm',
              args: 'start',
              cwd: '/home/ubuntu/monstas7/frontend',
              instances: 1,
              exec_mode: 'fork',
              max_memory_restart: '512M',
              node_args: '--max-old-space-size=512',
              env: {
                NODE_ENV: 'production',
                PORT: 3000
              },
              error_file: '/home/ubuntu/logs/pm2-error.log',
              out_file: '/home/ubuntu/logs/pm2-out.log',
              log_file: '/home/ubuntu/logs/pm2-combined.log',
              time: true,
              autorestart: true,
              max_restarts: 3,
              min_uptime: '10s'
            }]
          };
          EOF

          # 10. 로그 디렉토리 생성
          mkdir -p ~/logs

          # 11. PM2로 앱 시작 (메모리 제한 포함)
          echo "=== PM2로 앱 시작 ==="
          pm2 start ecosystem.config.js
          pm2 save

          # 12. Nginx 설정 확인 및 재시작
          echo "=== Nginx 설정 수정 ==="
          sudo tee /etc/nginx/sites-available/default > /dev/null << 'EOF'
          upstream nextjs {
              server 127.0.0.1:3000;
              keepalive 64;
          }

          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name _;

              client_max_body_size 100M;
              client_body_timeout 120s;
              client_header_timeout 120s;

              # 타임아웃 설정 증가
              proxy_connect_timeout 120s;
              proxy_send_timeout 120s;
              proxy_read_timeout 120s;
              send_timeout 120s;

              location / {
                  proxy_pass http://nextjs;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;

                  # 버퍼 설정
                  proxy_buffering off;
                  proxy_buffer_size 4k;
                  proxy_buffers 8 4k;
                  proxy_busy_buffers_size 8k;
              }

              # 정적 파일 직접 서빙
              location /_next/static {
                  alias /home/ubuntu/monstas7/frontend/.next/static;
                  expires 365d;
                  add_header Cache-Control "public, immutable";
              }

              location /images {
                  alias /home/ubuntu/monstas7/frontend/public/images;
                  expires 365d;
                  add_header Cache-Control "public, immutable";
              }
          }
          EOF

          # 13. Nginx 재시작
          echo "=== Nginx 재시작 ==="
          sudo nginx -t
          sudo systemctl restart nginx

          # 14. 시스템 모니터링 설정
          echo "=== 자동 재시작 스크립트 설정 ==="
          cat > ~/monitor.sh << 'EOF'
          #!/bin/bash

          # PM2 프로세스 체크
          if ! pm2 list | grep -q "online"; then
              echo "PM2 프로세스 다운 감지 - 재시작"
              cd ~/monstas7/frontend
              pm2 start ecosystem.config.js
          fi

          # 메모리 체크 (80% 이상 사용시 재시작)
          MEM_USAGE=$(free | grep Mem | awk '{print int($3/$2 * 100)}')
          if [ $MEM_USAGE -gt 80 ]; then
              echo "메모리 사용량 높음 ($MEM_USAGE%) - PM2 재시작"
              pm2 restart all
          fi
          EOF

          chmod +x ~/monitor.sh

          # 15. Crontab 설정 (5분마다 체크)
          (crontab -l 2>/dev/null; echo "*/5 * * * * /home/ubuntu/monitor.sh >> /home/ubuntu/logs/monitor.log 2>&1") | crontab -

          # 16. 최종 상태 확인
          echo "=== 최종 상태 확인 ==="
          pm2 list
          pm2 logs --lines 20
          sudo systemctl status nginx
          free -h
          df -h

          echo "=== 502 에러 해결 완료 ==="
          echo "서버 URL: http://15.165.105.250"
          curl -I http://localhost:3000 || true