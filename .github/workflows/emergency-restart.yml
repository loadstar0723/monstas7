name: Emergency Server Restart

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  restart-server:
    runs-on: ubuntu-latest

    steps:
    - name: Restart AWS EC2 Instance
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2
      run: |
        # EC2 인스턴스 재시작
        aws ec2 reboot-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}

        # 30초 대기
        sleep 30

        # 인스턴스 상태 확인
        aws ec2 describe-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --query 'Reservations[0].Instances[0].State.Name' \
          --output text

    - name: Deploy with Memory Optimization
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          # 메모리 정리
          sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches

          # 불필요한 프로세스 종료
          sudo pkill -f node || true
          sudo pkill -f npm || true
          sudo pkill -f go || true

          # 스왑 메모리 설정 (없으면 생성)
          if [ ! -f /swapfile ]; then
            sudo fallocate -l 2G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
          fi

          # Docker 컨테이너 정리
          docker system prune -af || true

          # 프로젝트 디렉토리로 이동
          cd /home/ubuntu/monstas7

          # Git pull
          git pull origin master

          # Frontend 빌드 (메모리 제한 설정)
          cd frontend
          export NODE_OPTIONS="--max-old-space-size=1024"

          # 의존성 설치 (production only)
          npm ci --production

          # 빌드 (최적화 모드)
          npm run build

          # PM2로 실행 (메모리 제한 설정)
          pm2 delete all || true
          pm2 start npm --name "frontend" -- start -- --port 3000 --max-memory-restart 500M

          # Go 엔진은 가벼우므로 별도 실행
          cd ../go-trading-engine
          nohup go run cmd/server/main.go > /dev/null 2>&1 &

          # Nginx 재시작
          sudo systemctl restart nginx

          echo "Deployment completed with memory optimization"