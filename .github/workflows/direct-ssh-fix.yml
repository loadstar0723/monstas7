name: Direct SSH Server Fix

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/direct-ssh-fix.yml'

jobs:
  direct-fix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Direct SSH Commands to Fix Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 13.209.84.93
          username: ubuntu
          key: ${{ secrets.AWS_SERVER_KEY }}
          timeout: 30m
          script: |
            set -e
            echo "🔧 서버 직접 복구 시작 $(date)"
            
            # 1단계: 강제 정리
            echo "====== 1. 모든 프로세스 강제 종료 ======"
            pm2 kill || echo "PM2 종료 실패"
            sudo killall -9 node || echo "node 프로세스 없음"
            sudo killall -9 npm || echo "npm 프로세스 없음"
            sudo fuser -k 3000/tcp || echo "포트 3000 이미 해제됨"
            
            # 2단계: 디렉토리 확인
            echo "====== 2. 프로젝트 디렉토리 확인 ======"
            if [ -d ~/monstas7 ]; then
                echo "monstas7 디렉토리 발견"
                cd ~/monstas7
            else
                echo "monstas7 디렉토리 없음, 클론 시작"
                cd ~
                git clone https://github.com/loadstar0723/monstas7.git
                cd monstas7
            fi
            
            # 3단계: 최신 코드
            echo "====== 3. 최신 코드 가져오기 ======"
            git fetch origin
            git reset --hard origin/master
            git pull origin master
            
            # 4단계: Frontend 디렉토리
            echo "====== 4. Frontend 디렉토리 이동 ======"
            cd frontend
            pwd
            ls -la
            
            # 5단계: 클린 설치
            echo "====== 5. 의존성 클린 설치 ======"
            rm -rf node_modules package-lock.json .next
            npm cache clean --force
            
            # 필수 패키지 설치
            npm install --save tailwindcss@latest autoprefixer@latest postcss@latest
            
            # 전체 설치
            npm install
            
            # 6단계: 환경 설정
            echo "====== 6. 환경 변수 설정 ======"
            cat > .env.local << 'ENVEOF'
            NEXTAUTH_SECRET=monstas7-secret-key-2024-production-secure
            NEXTAUTH_URL=http://13.209.84.93:3000
            NODE_ENV=production
            DATABASE_URL="file:./prisma/dev.db"
            NEXT_PUBLIC_API_URL=http://13.209.84.93:3000/api
            ENVEOF
            
            cp .env.local .env.production
            cp .env.local .env
            
            # 7단계: Prisma
            echo "====== 7. Prisma 생성 ======"
            npx prisma generate || echo "Prisma 생성 실패"
            
            # 8단계: PM2 정리
            echo "====== 8. PM2 기존 프로세스 정리 ======"
            pm2 delete all || echo "삭제할 프로세스 없음"
            
            # 9단계: 서버 시작 (여러 방법 시도)
            echo "====== 9. 서버 시작 ======"
            
            # 방법 1: PM2 개발 모드
            echo "방법 1: PM2 개발 모드 시도..."
            PORT=3000 HOST=0.0.0.0 NODE_OPTIONS="--max-old-space-size=512" \
            pm2 start npm --name monsta-prod -- run dev
            
            # PM2 저장
            pm2 save
            pm2 startup systemd -u ubuntu --hp /home/ubuntu || echo "startup 설정 실패"
            
            # 10단계: 확인
            echo "====== 10. 상태 확인 ======"
            sleep 5
            
            # PM2 상태
            echo "PM2 프로세스:"
            pm2 list
            
            # 포트 확인
            echo "포트 3000 상태:"
            sudo netstat -tlnp | grep :3000 || echo "포트 3000 리스닝 안됨"
            
            # 프로세스 확인
            echo "Node 프로세스:"
            ps aux | grep node | head -5
            
            # 11단계: 로그
            echo "====== 11. 로그 확인 ======"
            pm2 logs monsta-prod --lines 30 --nostream || echo "로그 없음"
            
            # 12단계: 테스트
            echo "====== 12. 접속 테스트 ======"
            sleep 5
            
            # localhost 테스트
            if curl -f -m 10 http://localhost:3000 > /dev/null 2>&1; then
                echo "✅ localhost:3000 응답 성공!"
            else
                echo "❌ localhost:3000 응답 실패"
                
                # 백업 방법: nohup
                echo "백업 방법: nohup으로 직접 실행..."
                pm2 delete monsta-prod || true
                cd ~/monstas7/frontend
                PORT=3000 HOST=0.0.0.0 nohup npm run dev > ~/server.log 2>&1 &
                echo "PID: $!"
                sleep 5
                echo "서버 로그:"
                tail -30 ~/server.log
            fi
            
            # 13단계: 최종 메시지
            echo "====== 13. 최종 상태 ======"
            echo "메모리:"
            free -h
            echo ""
            echo "디스크:"
            df -h | grep -E "/$|/home"
            echo ""
            echo "✅ 복구 시도 완료!"
            echo "🌐 접속 주소: http://13.209.84.93:3000"
            echo "📝 PM2 모니터: pm2 monit"
            echo "🔄 재시작: pm2 restart monsta-prod"
            echo "📋 로그: pm2 logs monsta-prod"