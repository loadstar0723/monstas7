name: Deploy MONSTA Hybrid Platform

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Send deployment start notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            🚀 MONSTA Next.js + FastAPI 배포 시작
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🔗 커밋 ID: ${{ github.sha }}
            🌿 브랜치: ${{ github.ref_name }}
            
            ⏳ 배포 진행 중...
      
      - name: Deploy Next.js + FastAPI to AWS
        id: deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 13.209.84.93
          username: ubuntu
          key: ${{ secrets.AWS_SERVER_KEY }}
          script: |
            # 프로젝트 디렉토리로 이동
            cd ~/monsta-v7/monstas7
            
            # 최신 코드 가져오기
            git pull origin master
            
            # Streamlit 프로세스 완전 제거
            pkill -f streamlit || true
            
            # 1. FastAPI Backend 시작 (포트 8000)
            echo "🔧 Starting FastAPI Backend..."
            cd backend
            
            # Python 가상환경 확인 및 생성
            if [ ! -d "../venv" ]; then
                python3 -m venv ../venv
            fi
            
            source ../venv/bin/activate
            pip install -r requirements.txt --quiet
            
            # 기존 FastAPI 프로세스 종료
            pkill -f "uvicorn.*8000" || true
            sleep 2
            
            # FastAPI 시작
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload > backend.log 2>&1 &
            echo "✅ FastAPI started on port 8000"
            
            # 2. Next.js Frontend 빌드 및 시작 (포트 3000)
            echo "🎨 Building Next.js Frontend..."
            cd ../frontend
            
            # Node.js 버전 확인
            node -v || {
                echo "Node.js not found, installing..."
                curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
                sudo apt-get install -y nodejs
            }
            
            # npm 패키지 설치
            npm install
            
            # 프로덕션 빌드
            npm run build || {
                echo "Build failed, checking errors..."
                exit 1
            }
            
            # PM2 설치 확인
            which pm2 || {
                echo "Installing PM2..."
                sudo npm install -g pm2
            }
            
            # 기존 PM2 프로세스 제거
            pm2 stop all || true
            pm2 delete all || true
            
            # PM2로 Next.js 시작
            pm2 start npm --name "monsta-nextjs" -- start
            pm2 save
            pm2 startup || true
            
            echo "✅ Next.js started with PM2"
            
            # 3. 헬스 체크 (20초 대기)
            sleep 20
            
            # Backend 헬스 체크
            if curl -f http://localhost:8000/api/v1/health > /dev/null 2>&1; then
              echo "✅ Backend API is healthy"
            else
              echo "❌ Backend health check failed"
              tail -n 30 backend/backend.log
              exit 1
            fi
            
            # Frontend 헬스 체크
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "✅ Frontend is running"
            else
              echo "❌ Frontend not responding"
              pm2 logs monsta-nextjs --lines 30
              exit 1
            fi
            
            # AWS 보안 그룹 확인 메시지
            echo "📌 Important: Make sure AWS Security Group allows:"
            echo "   - Port 3000 (Next.js Frontend)"
            echo "   - Port 8000 (FastAPI Backend)"
            
            echo "✅ Deployment completed at $(date)"
            echo "🌐 Frontend: http://13.209.84.93:3000"
            echo "🔧 Backend API: http://13.209.84.93:8000"
            echo "📊 Health Check: http://13.209.84.93:8000/api/v1/health"
      
      - name: Send success notification
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ MONSTA 배포 성공!
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🕐 완료 시간: ${{ github.event.head_commit.timestamp }}
            
            🌐 Frontend: http://13.209.84.93:3000
            🔧 Backend API: http://13.209.84.93:8000
            📊 GitHub Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            🎉 Next.js + FastAPI 하이브리드 시스템 배포 완료!
      
      - name: Send failure notification
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ MONSTA 배포 실패!
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🔗 커밋 ID: ${{ github.sha }}
            
            📋 로그 확인: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ⚠️ 배포가 실패했습니다. 로그를 확인해주세요!