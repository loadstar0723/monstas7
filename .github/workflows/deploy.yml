name: Deploy MONSTA Hybrid Platform

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Send deployment start notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            🚀 MONSTA 배포 시작
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🔗 커밋 ID: ${{ github.sha }}
            🌿 브랜치: ${{ github.ref_name }}
            
            ⏳ 배포 진행 중...
      
      - name: Deploy to AWS Server
        id: deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 13.209.84.93
          username: ubuntu
          key: ${{ secrets.AWS_SERVER_KEY }}
          script: |
            # 프로젝트 디렉토리로 이동
            cd ~/monsta-v7/monstas7
            
            # 최신 코드 가져오기
            git pull origin master
            
            # 1. FastAPI Backend 시작 (포트 8000)
            echo "Starting FastAPI Backend..."
            cd backend
            source ../venv/bin/activate
            pip install -r requirements.txt --quiet
            pkill -f "uvicorn.*8000" || true
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload > backend.log 2>&1 &
            
            # 2. Next.js Frontend 빌드 및 시작 (포트 3000)
            echo "Building Next.js Frontend..."
            cd ../frontend
            npm install
            npm run build
            
            # PM2로 실행
            pm2 stop monsta-hybrid || true
            pm2 delete monsta-hybrid || true
            pm2 start npm --name "monsta-hybrid" -- start
            pm2 save
            
            # 헬스 체크 (20초 대기 후)
            sleep 20
            
            # Backend 헬스 체크
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "✅ Backend is running on port 8000"
            else
              echo "❌ Backend health check failed"
              tail -n 30 backend/backend.log
            fi
            
            # Frontend 헬스 체크
            if pm2 list | grep -q "monsta-hybrid.*online"; then
              echo "✅ Frontend is running on port 3000"
            else
              echo "❌ Frontend is not running"
              pm2 logs monsta-hybrid --lines 30
              exit 1
            fi
            
            # 최종 통합 체크
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "DEPLOYMENT_SUCCESS"
            else
              echo "DEPLOYMENT_FAILED"
              exit 1
            fi
            
            echo "✅ Hybrid Platform Deployment completed at $(date)"
            echo "🌐 Frontend: http://13.209.84.93:3000"
            echo "🔧 Backend API: http://13.209.84.93:8000"
            echo "📊 Health Check: http://13.209.84.93:8000/health"
      
      - name: Send success notification
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ MONSTA 배포 성공!
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🕐 완료 시간: ${{ github.event.head_commit.timestamp }}
            
            🌐 Frontend: http://13.209.84.93:3000
            🔧 Backend API: http://13.209.84.93:8000
            📊 GitHub Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            🎉 배포가 성공적으로 완료되었습니다!
      
      - name: Send failure notification
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.DEPLOY_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.DEPLOY_TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ MONSTA 배포 실패!
            
            📝 커밋: ${{ github.event.head_commit.message }}
            👤 작성자: ${{ github.actor }}
            🔗 커밋 ID: ${{ github.sha }}
            
            📋 로그 확인: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ⚠️ 배포가 실패했습니다. 로그를 확인해주세요!